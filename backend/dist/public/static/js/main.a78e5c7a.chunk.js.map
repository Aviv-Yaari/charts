{"version":3,"sources":["assets/images/icon-close.svg","assets/styles/AppAlert.styled.tsx","assets/styles/shared/Button.styled.tsx","components/AppAlert.tsx","assets/styles/general/GlobalStyle.styled.tsx","assets/styles/MainContainer.styled.tsx","assets/styles/AppHeader.styled.tsx","components/AppHeader.tsx","assets/styles/Chart.styled.tsx","hooks/useFetch.ts","services/http.service.ts","services/point.service.ts","hooks/useInterval.ts","components/Chart.tsx","assets/styles/Login.styled.tsx","assets/styles/shared/Input.styled.tsx","components/Login.tsx","services/auth.service.ts","App.tsx","index.tsx"],"names":["_path","_path2","StyledAppAlert","styled","div","props","type","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconClose","_ref","svgRef","title","titleId","xmlns","height","viewBox","width","fill","ref","id","d","ForwardRef","Button","button","disabled","css","ButtonPrimary","ButtonSecondary","ButtonIcon","AppAlert","alert","onClose","useEffect","timeout","setTimeout","clearTimeout","message","onClick","GlobalStyle","createGlobalStyle","reset","MainContainer","StyledAppHeader","header","AppHeader","user","onLogout","StyledChart","main","useFetch","setAlert","useState","isLoading","setIsLoading","error","setError","fetchData","useCallback","func","a","errorMessage","successMessage","response","axios","Axios","create","withCredentials","BASE_URL","ajax","endpoint","method","data","url","params","res","statusText","Error","httpService","get","point","pointService","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","Chart","fetchPoint","points","setPoints","labels","setLabels","dataset1","setDataset1","dataset2","setDataset2","reduce","push","timestamp","num1","num2","point1","point2","copy","differenceInSeconds","Date","now","shift","num","datasets","borderWidth","borderColor","backgroundColor","pointRadius","options","responsive","animation","duration","scales","x","time","unit","stepSize","displayFormats","second","plugins","legend","display","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","TimeScale","Title","Tooltip","Legend","StyledLogin","form","Input","input","Login","onLogin","username","password","values","setValues","handleLogin","ev","preventDefault","handleChange","name","value","onSubmit","placeholder","onChange","login","_saveToStorage","logout","sessionStorage","clear","signup","fullname","reloadUser","authService","getCurrentUser","getItem","JSON","parse","err","setItem","stringify","App","setUser","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a78e5c7a.chunk.js","sourcesContent":["var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconClose);\nexport default __webpack_public_path__ + \"static/media/icon-close.244b6687.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\nimport { Alert } from '../../App';\r\n\r\nexport const StyledAppAlert = styled.div<{ type: Alert['type'] }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: fixed;\r\n  top: 80px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding: 10px;\r\n  background-color: ${props => (props.type === 'error' ? '#ffd7db' : '#c4ffb5')};\r\n  width: 100%;\r\n  max-width: 350px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 3px 0 #c9c9c9;\r\n`;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px 16px;\r\n  border-radius: 4px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 0.9em;\r\n  ${props => props.disabled && css`pointer-events: none;`}\r\n`;\r\n\r\nexport const ButtonPrimary = styled(Button)`\r\n  border: 1px solid #1dbf73;\r\n  background: #1dbf73;\r\n  color: #fff;\r\n  &:hover {\r\n    border-color: #19925a;\r\n    background: #19925a;\r\n  }\r\n`;\r\n\r\nexport const ButtonSecondary = styled(Button)`\r\n  background: #fff;\r\n  color: #1dbf73;\r\n  border: 1px solid #1dbf73;\r\n  &:hover {\r\n    color: #fff;\r\n    background: #1dbf73;\r\n  }\r\n`;\r\n\r\nexport const ButtonIcon = styled.button`\r\n  padding: 3px;\r\n  background: transparent;\r\n  border: none;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #b1b1b128;\r\n  }\r\n`;","import { useEffect } from 'react';\r\nimport { setTimeout } from 'timers';\r\nimport { Alert } from '../App';\r\nimport { StyledAppAlert } from '../assets/styles/AppAlert.styled';\r\nimport { ReactComponent as IconClose } from '../assets/images/icon-close.svg';\r\nimport { ButtonIcon } from '../assets/styles/shared/Button.styled';\r\n\r\ninterface Props {\r\n  alert: Alert;\r\n  onClose: () => void;\r\n}\r\nexport function AppAlert({ alert, onClose }: Props) {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(onClose, 3000);\r\n    return () => clearTimeout(timeout);\r\n  }, [onClose]);\r\n  return (\r\n    <StyledAppAlert type={alert.type}>\r\n      <span>{alert.message}</span>\r\n      <ButtonIcon onClick={onClose}>\r\n        <IconClose />\r\n      </ButtonIcon>\r\n    </StyledAppAlert>\r\n  );\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nexport const GlobalStyle = createGlobalStyle<{ theme: any }>`\r\n  ${reset}\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n      font-family: 'Roboto', sans-serif;\r\n      line-height: 1.5;\r\n  }\r\n  \r\n  h1,h2 {\r\n    font-weight: 700;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainContainer = styled.div`\r\n  display: grid;\r\n  min-height: 100vh;\r\n  place-content: center;\r\n  background: #f7f7f7;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledAppHeader = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-bottom: 1px solid #e4e5e7;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n","import { StyledAppHeader } from '../assets/styles/AppHeader.styled';\r\nimport { ButtonSecondary } from '../assets/styles/shared/Button.styled';\r\nimport { User } from '../services/auth.service';\r\n\r\ninterface Props {\r\n  user: User;\r\n  onLogout: () => void;\r\n}\r\nexport function AppHeader({ user, onLogout }: Props) {\r\n  return (\r\n    <StyledAppHeader>\r\n      <h1>Charts</h1>\r\n      {user && <ButtonSecondary onClick={onLogout}>Logout</ButtonSecondary>}\r\n    </StyledAppHeader>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledChart = styled.main`\r\n  background: #fff;\r\n  padding: 20px;\r\n  width: 80vw;\r\n`;\r\n","import { useCallback, useState } from 'react';\r\nimport { Alert } from '../App';\r\n\r\nexport const useFetch = (setAlert: React.Dispatch<React.SetStateAction<Alert | null>>) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<unknown>(null);\r\n\r\n  const fetchData = useCallback(\r\n    async (func: Function, errorMessage: string = 'An error occured', successMessage?: string) => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await func();\r\n        setIsLoading(false);\r\n        if (successMessage) setAlert({ message: successMessage, type: 'success' });\r\n        return response;\r\n      } catch (error) {\r\n        setError(error);\r\n        setAlert({ message: errorMessage, type: 'error' });\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [setAlert]\r\n  );\r\n\r\n  return { fetchData, isLoading, error };\r\n};\r\n","import Axios, { AxiosError, Method } from 'axios';\r\nconst axios = Axios.create({ withCredentials: true });\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/api/' : '//localhost:3030/api/';\r\n\r\nasync function ajax(endpoint: string, method: Method = 'GET', data: {} | null = null) {\r\n  try {\r\n    const res = await axios({\r\n      url: `${BASE_URL}${endpoint}`,\r\n      method,\r\n      data,\r\n      params: method === 'GET' ? data : null,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    const message = (error as AxiosError).response?.statusText || 'An error occured';\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\nexport const httpService = {\r\n  get(endpoint: string, data?: {}) {\r\n    return ajax(endpoint, 'GET', data);\r\n  },\r\n  post(endpoint: string, data?: {} | null) {\r\n    return ajax(endpoint, 'POST', data);\r\n  },\r\n  put(endpoint: string, data?: {} | null) {\r\n    return ajax(endpoint, 'PUT', data);\r\n  },\r\n  delete(endpoint: string, data?: {}) {\r\n    return ajax(endpoint, 'DELETE', data);\r\n  },\r\n};\r\n","import { httpService } from './http.service';\r\n\r\nexport interface DataPoint {\r\n  timestamp: number;\r\n  num1: number;\r\n  num2: number;\r\n}\r\n\r\nconst get = async () => {\r\n  const point = await httpService.get('point');\r\n  return point;\r\n};\r\n\r\nexport const pointService = { get };\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport const useInterval = (callback: Function, delay: number) => {\r\n  const savedCallback = useRef<Function>();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    const tick = () => savedCallback.current && savedCallback.current();\r\n    let id = setInterval(tick, delay);\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n};\r\n","import { StyledChart } from '../assets/styles/Chart.styled';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  TimeScale,\r\n} from 'chart.js';\r\nimport { useState } from 'react';\r\nimport { Alert } from '../App';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport { DataPoint, pointService } from '../services/point.service';\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { differenceInSeconds } from 'date-fns';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, TimeScale, Title, Tooltip, Legend);\r\n\r\ninterface Props {\r\n  setAlert: React.Dispatch<React.SetStateAction<Alert | null>>;\r\n}\r\n\r\nexport function Chart({ setAlert }: Props) {\r\n  const { fetchData: fetchPoint, error } = useFetch(setAlert);\r\n  const [points, setPoints] = useState<DataPoint[]>([]);\r\n  const [labels, setLabels] = useState<number[]>([]);\r\n  const [dataset1, setDataset1] = useState<number[]>([]);\r\n  const [dataset2, setDataset2] = useState<number[]>([]);\r\n\r\n  // Update Chart\r\n  useInterval(() => {\r\n    const { labels, dataset1, dataset2 } = points.reduce(\r\n      (res, point) => {\r\n        res.labels.push(point.timestamp);\r\n        res.dataset1.push(point.num1);\r\n        res.dataset2.push(point.num2);\r\n        return res;\r\n      },\r\n      { labels: [] as number[], dataset1: [] as number[], dataset2: [] as number[] }\r\n    );\r\n    setLabels(labels);\r\n    setDataset1(dataset1);\r\n    setDataset2(dataset2);\r\n  }, 1000);\r\n\r\n  // Update Points\r\n  useInterval(async () => {\r\n    if (error) return; // prevent too many requests when server is potentially down\r\n    const point1 = await fetchPoint(pointService.get);\r\n    const point2 = await fetchPoint(pointService.get);\r\n    if (!point1 || !point2) return;\r\n    setPoints(points => {\r\n      const copy = [...points];\r\n      if (points[0] && differenceInSeconds(Date.now(), points[0].timestamp) > 180) copy.shift();\r\n      copy.push({ timestamp: Date.now(), num1: point1.num, num2: point2.num });\r\n      return copy;\r\n    });\r\n  }, 2500);\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        borderWidth: 1,\r\n        data: dataset1,\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        pointRadius: 0,\r\n      },\r\n      {\r\n        borderWidth: 1,\r\n        data: dataset2,\r\n        borderColor: 'rgb(99, 128, 255)',\r\n        backgroundColor: 'rgba(109, 99, 255, 0.5)',\r\n        pointRadius: 0,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <StyledChart>\r\n      <Line\r\n        options={{\r\n          responsive: true,\r\n          animation: {\r\n            duration: 0,\r\n          },\r\n          scales: {\r\n            x: {\r\n              type: 'time',\r\n              time: {\r\n                unit: 'second',\r\n                stepSize: 10,\r\n                displayFormats: { second: 'hh:mm:ss' },\r\n              },\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n          },\r\n        }}\r\n        data={data}\r\n      />\r\n    </StyledChart>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLogin = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  width: 100vw;\r\n  max-width: 300px;\r\n  gap: 10px;\r\n  background: #fff;\r\n  box-shadow: 0 0 3px 0 #0003;\r\n  padding: 20px;\r\n  input:last-of-type {\r\n    margin-bottom: 10px;\r\n  }\r\n  input:first-of-type {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n  outline: none;\r\n  border: 1px solid #c5c6c9;\r\n  border-radius: 4px;\r\n  color: #404145;\r\n  padding: 8px 12px;\r\n  width: 100%;\r\n  transition: border-color 0.15s ease-in-out;\r\n  font-family: inherit;\r\n  font-size: 0.9em;\r\n  &:hover {\r\n    border-color: #95979d;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { StyledLogin } from '../assets/styles/Login.styled';\r\nimport { ButtonPrimary, ButtonSecondary } from '../assets/styles/shared/Button.styled';\r\nimport { Input } from '../assets/styles/shared/Input.styled';\r\n\r\ninterface Props {\r\n  onLogin: (username: string, password: string) => void;\r\n  isLoading: boolean;\r\n}\r\nexport function Login({ onLogin, isLoading }: Props) {\r\n  const [values, setValues] = useState({ username: '', password: '' });\r\n\r\n  const handleLogin: React.FormEventHandler<HTMLFormElement> = async ev => {\r\n    ev.preventDefault();\r\n    onLogin(values.username, values.password);\r\n  };\r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = ev => {\r\n    const { name, value } = ev.target;\r\n    setValues(values => ({ ...values, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <StyledLogin onSubmit={handleLogin}>\r\n      <h2>Log in</h2>\r\n      <Input name=\"username\" type=\"text\" placeholder=\"Username\" onChange={handleChange} />\r\n      <Input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} />\r\n      <ButtonPrimary disabled={isLoading}>{isLoading ? 'Logging in..' : 'Continue'}</ButtonPrimary>\r\n      <ButtonSecondary disabled={isLoading} type=\"button\" onClick={() => onLogin('username', 'password')}>\r\n        Easy login - for dev purposes\r\n      </ButtonSecondary>\r\n    </StyledLogin>\r\n  );\r\n}\r\n","import { httpService } from './http.service';\r\n\r\nexport interface User {\r\n  _id: string;\r\n  username: string;\r\n  fullname: string;\r\n}\r\n\r\nconst login = async (username: string, password: string) => {\r\n  const user = await httpService.post('auth/login', { username, password });\r\n  _saveToStorage(user);\r\n  return user;\r\n};\r\n\r\nconst logout = async () => {\r\n  sessionStorage.clear();\r\n  await httpService.post('auth/logout');\r\n  return null;\r\n};\r\n\r\nconst signup = async (username: string, fullname: string, password: string) => {\r\n  const user = await httpService.post('auth/signup', { username, fullname, password });\r\n  _saveToStorage(user);\r\n  return user;\r\n};\r\n\r\nconst reloadUser = async () => {\r\n  const user = await httpService.get('auth/current');\r\n  if (user) _saveToStorage(user);\r\n  else sessionStorage.clear();\r\n  return user;\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  try {\r\n    const user = sessionStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const authService = { login, logout, signup, getCurrentUser, reloadUser };\r\n\r\nfunction _saveToStorage(user: User) {\r\n  sessionStorage.setItem('user', JSON.stringify(user));\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { AppAlert } from './components/AppAlert';\r\nimport { GlobalStyle } from './assets/styles/general/GlobalStyle.styled';\r\nimport { MainContainer } from './assets/styles/MainContainer.styled';\r\nimport { AppHeader } from './components/AppHeader';\r\nimport { Chart } from './components/Chart';\r\nimport { Login } from './components/Login';\r\nimport { useFetch } from './hooks/useFetch';\r\nimport { authService } from './services/auth.service';\r\n\r\nexport interface Alert {\r\n  type: 'error' | 'success';\r\n  message: string;\r\n}\r\n\r\nfunction App() {\r\n  const [alert, setAlert] = useState<Alert | null>(null);\r\n  const [user, setUser] = useState(authService.getCurrentUser());\r\n  const { fetchData, isLoading } = useFetch(setAlert);\r\n\r\n  useEffect(() => {\r\n    fetchData(authService.reloadUser).then(setUser);\r\n  }, [fetchData]);\r\n\r\n  const handleLogout = () => {\r\n    fetchData(authService.logout).then(setUser);\r\n  };\r\n\r\n  const handleLogin = async (username: string, password: string) => {\r\n    const user = await fetchData(\r\n      () => authService.login(username, password),\r\n      'Could not login',\r\n      'Logged in successfuly'\r\n    );\r\n    setUser(user);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MainContainer>\r\n        <AppHeader user={user} onLogout={handleLogout} />\r\n        {user ? <Chart setAlert={setAlert} /> : <Login onLogin={handleLogin} isLoading={isLoading} />}\r\n        {alert && <AppAlert onClose={() => setAlert(null)} alert={alert} />}\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}